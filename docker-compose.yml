---
version: '2'

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:6.1.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    broker:
        image: confluentinc/cp-kafka:6.1.0
        hostname: broker
        container_name: broker
        depends_on:
            - zookeeper
        ports:
            - "29092:29092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
    
    db:
        image: postgres
        hostname: db
        container_name: db
        restart: always
        environment:
            POSTGRES_PASSWORD: password
        ports:
            - 5432:5432

    # adminer:
    #     image: adminer
    #     hostname: adminer
    #     container_name: adminer
    #     restart: always
    #     ports:
    #         - 8081:8080
    
    # elasticsearch:
    #     image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    #     hostname: elasticsearch
    #     container_name: elasticsearch
    #     environment:
    #         - discovery.type=single-node
    #     ports:
    #         - 9200:9200
    #         - 9300:9300
    
    grafana:
        image: grafana/grafana:latest
        hostname: grafana
        depends_on:
            - prometheus
        container_name: grafana
        ports:
            - 3000:3000

    rabbitmq:
        image: rabbitmq:3-management-alpine
        hostname: rabbitmq
        container_name: rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        # volumes:
        #     - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
        #     - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
        #     - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
    
    prometheus:
        hostname: prometheus
        container_name: prometheus
        image: prom/prometheus
        ports:
            - 9090:9090
        volumes:
            - ./prometheus:/etc/prometheus
            - prometheus-data:/prometheus
        command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

volumes:
    prometheus-data: